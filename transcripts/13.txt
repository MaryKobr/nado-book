Aaron Van Wirdum:
Live Utrecht. This is The Van Wirdum Sjorsnado.

Sjors Provoost:
Hello.

Aaron Van Wirdum:
Sjors, you pointed out to me that Bitcoin Core has an amazing new feature merged into its repository.

Sjors Provoost:
Absolutely. We have bigger onions now.

Aaron Van Wirdum:
Bigger onions.

Sjors Provoost:
Bigger onions.

Aaron Van Wirdum:
Right. So I had basically no idea what it meant. You, figured it out.

Sjors Provoost:
I did.

Aaron Van Wirdum:
You know everything about this?

Sjors Provoost:
Well, I wouldn't say that, but I know a thing or two. So basically-

Aaron Van Wirdum:
Yeah. So let's start at the beginning. It's about Tor.

Sjors Provoost:
Well, it's also about Tor. But Tor was kind of the big... I guess, the big motivator to get everything in there. So, if you're familiar with the... if you ever used Tor or do you know what Tor is? I shouldn't ask those kind of questions.

Aaron Van Wirdum:
I have a basic understanding of what Tor is, yes.

Sjors Provoost:
Exactly and when you see a Tor address, it' this weird little, it looks quite weird. A nice way to say it. And so the idea is that it's actually a public key, essentially, a Tor address, and that refers to a hidden service somewhere on the internet and the way you communicate to that hidden service is not directly because you don't know its IP address, but indirectly through the Tor network and you use onion packages for that. So, the idea is that you start from the inside, like the last hop before the hidden service and you give that hop instructions how to reach the hidden service and then you write instructions for the second last hop and you give it instructions how to reach the first hop.

Aaron Van Wirdum:
Sure. Yeah. Everyone is still using IP addresses. It's just, you don't know the IP address of the Tor nodes you're communicating with. Instead, you're communicating with other Tor nodes and every Tor node communicates with the direct peer. So, everyone only knows the IP address of their direct peer, but they don't know where the message originated or where it ends up, plus they can't read the message because it's encrypted.

Sjors Provoost:
That's right.

Aaron Van Wirdum:
And in order to support this, all of these Tor nodes have their own sort of IP address, which is their onion address and that's what you're communicating with directly, so to say.

Sjors Provoost:
Yeah, and Bitcoin Core nodes can run behind such a hidden service so everybody can have their Bitcoin node run at a secret location. So your IP address remains secret.

Aaron Van Wirdum:
Right? What's the practical benefit of that?

Sjors Provoost:
Well, your IP address remains secret. So if you don't want the rest of the world to know that your IP address is running a Bitcoin node, maybe that's useful.

Aaron Van Wirdum:
Yeah, and I think it's also because if you're sending transactions from an IP address, then network analysis can reveal where transactions is originated. Although I guess that's also being solved, right? There's other solutions for that as well.

Sjors Provoost:
Well, that's defense in depth, right? So ideally your node behaves in a way that it looks indistinguishable from all of the nodes. So, you node downloads all the blocks and it downloads all the Mempool transactions and you can't tell which wallet is running inside, which node, but there's all these sneaky companies that try anyway and then they might know that you sent a specific transaction. Well then they might know which Bitcoins belong to you and since your IP address is quite easy to figure out who you are. It could be nice to have Tor in theory. But regardless, I mean, that's just how it works.

Aaron Van Wirdum:
Okay. So you can use Bitcoin from behind Tor and I think the thing was that there's a new type of onion addresses. There was an update in the Tor protocol.

Sjors Provoost:
That's right.

Aaron Van Wirdum:
And that uses new addresses.

Sjors Provoost:
Yeah. So, the Tor addresses are now longer essentially, which just makes them more secure and I guess we don't need to go into why that is because I don't know why that is. All we know is that onion addresses now version three are a bit longer and that means that if you want to keep running a Bitcoin node on Tor, you'll have to use those longer addresses because Tor is centralized and they have decided to eventually get rid of the version two addresses.

Aaron Van Wirdum:
Okay. But they didn't yet. So right now version two addresses are still usable.

Sjors Provoost:
Yes. I think they've been officially deprecated now and I think in about a year or so, they won't work anymore.

Aaron Van Wirdum:
I see. So, anyone who wants to continue using Tor needs to upgrade before next year, so to say?

Sjors Provoost:
Something like that, yeah.

Aaron Van Wirdum:
Roughly. So that's why Bitcoin would need to be upgraded in order to support this new address.

Sjors Provoost:
Yes. So then we get to the question of why? Why would this make a difference? What's wrong with the longer address? And that has to do with how Bitcoin nodes spread the word about who they are, because how do you know which node to connect to? And the idea there, is that nodes can communicate with each other. They send each other lists of known nodes. So they ask each other, "Hey, which Bitcoin nodes do you know?" and then they get a list of IP addresses and generally those are either IPv4 addresses or IPv6 addresses. IPv6 is the new kid in town since I don't know, 1998 or something.

Aaron Van Wirdum:
Right. These are the regular IP addresses.

Sjors Provoost:
Correct.

Aaron Van Wirdum:
Yeah. The IP6 ones are longer as well and that's because IP4 was running out, right?

Sjors Provoost:
Right. There's only, I think 4 billion potential IPv4 addresses, where is there's just enough for every molecule in the universe of IPv6 addresses.

Aaron Van Wirdum:
Right? So there's a list or Bitcoin nodes keep lists of other Bitcoin nodes and their IP addresses.

Sjors Provoost:
Yes, and the way you would communicate a Tor address that way is you would kind of piggyback on IPv6, because there is a convention. I think it's just outside of Bitcoin too. Where if the IPv6 address starts with a certain prefix, certain numbers, then everything that follows is the Tor address because the Tor version two... Let me see if I got it right and IPv6 address is 16 bytes and a Tor address is only 10 bytes, so. You can hide inside of it, unfortunately-

Aaron Van Wirdum:
So, Bitcoin nodes keep the IP addresses of other Bitcoin nodes they know, and these are these IP4 and IP6 and some of the IP6 are also the Tor addresses.

Sjors Provoost:
Exactly.

Aaron Van Wirdum:
And this is what, when nodes connect with each other, they share their lists. So everyone has an even more complete list of all of the Bitcoin nodes. Is this correct?

Sjors Provoost:
That's right. Yes. The problem with Tor version three addresses is that they are 32 bytes, which is twice as long as an IPv6 address.

Aaron Van Wirdum:
Right. So now you can hide it inside an IP6 address.

Sjors Provoost:
No. So, just nodes have no way to communicate those addresses at the moment. So, that-

Aaron Van Wirdum:
Right. So, that has been upgraded.

Sjors Provoost:
Exactly. So, this is not rocket science to solve, but somebody actually needs to do it and somebody Wladimir van der Laan wrote a standard a while ago. I think in 2019, that has a new way of communicating, of gossiping addresses and the major change is that each message says, "Okay, this is the type of address I'm going to communicate and that can be various types, including the new Tor one, but also future ones and then it can have different lengths". So, in the future, if a new address format comes along, that's too long, that's not going to be a problem. So, that address format is going to-

Aaron Van Wirdum:
Yeah, so that sounds like a pretty straightforward upgrade from my layman's perspective as a non programmer, but a very important one because we do want to keep using Tor potentially.

Sjors Provoost:
Yeah, and the nice thing is it's a completely new peer-to-peer message. So I guess old nodes, just ignore that message or if you know, it's an old node that you're talking to, you don't use that message. So newer nodes will know this new message and can communicate all these new address types and old the nodes carry on like nothing happened.

Aaron Van Wirdum:
Okay. I have one follow up question about this sharing of lists and sharing of IP addresses. Which is not Tor specific I guess, but how do you actually connect to the first node? How do you bootstrap to the network? If you have no idea, if you have list yet of other nodes, then how do you find the first node? How does this is actually working Bitcoin?

Sjors Provoost:
Yeah. So the bootstrap problem, basically you've just downloaded Bitcoin Core or some other client and you started up and now what? Is it just going to guess random IP addresses? No, right? So it needs to know another node to connect to at least one preferably a couple. The way it tries to do that is using something called DNS seeds. The internet DNS system is used for websites when you type an address www.google.com. What your browser does is it asks a DNS server, what IP addresses are from that Google domain.

Aaron Van Wirdum:
Do you know how many DNS servers there are?

Sjors Provoost:
Lots of them because basically if you run a website, your hosting provider will have a DNS server that points to your website, but then your country will have a DNS server that will point to your hosting provider and your internet provider has a DNS server that points to all these different countries, et cetera, et cetera. So, it's very redundant basically.

Aaron Van Wirdum:
We're going very off the trail here, but I do find it interesting.

Sjors Provoost:
Well, this is useful.

Aaron Van Wirdum:
How are these DNS servers? How do they remain in sync?

Sjors Provoost:
So basically when you have a DNS record. So, if you are maintaining a website, you usually have to go into some control panel and type in the IP address of your server and then your domain name and that's stored on the DNS server. One of the fields you have to fill out is the timeout. So what you're saying is after 24 hours, for example, or after one hour, you should ask me again. So, when you're visiting a website, you're going to ask maybe your ISP, "Hey, do you know the IP address for this website?" and if it doesn't, it's going to ask the next DNS server up the street, basically say, "Do you know it?" and then as soon as it finds a record, it's going to say, "Okay, is this record still valid or is this expired?" and if it's still valid, it'll use it and if it's expired, it'll go up closer and closer to the actual, to the actual hosting provider.

Sjors Provoost:
So it's, it's basically cashed. Does that make sense? So the easiest would be, if you go to a domain, like say google.com, okay. How do you find the IP address? Well, you ask Google what the IP address is, but how do you know what the IP address is for google.com? You don't know that because that's what you were trying to find out. So you have to ask somebody else and so you ask your internet provider, do you know the way to google.com? Well, your internet provider might not know that, but it says, "Well, I know the way to .com" basically, and .com will know the way to google.com. So, that's kind of how it works .nl same, you ask .nl, where is google.nl.

Aaron Van Wirdum:
Okay. Yeah. That makes total sense.

Sjors Provoost:
Yeah, and ideally they already have this cached because so many people go to google.com that if you ask your ISP, where is google.com they'll know because somebody else asked. But if they don't know, they'll send, you to .com.

Aaron Van Wirdum:
Right. Okay. So, this is where I'm really getting at the DNS system is ultimately centralized, right?

Sjors Provoost:
Yes.

Aaron Van Wirdum:
There's a centralization risk there.

Sjors Provoost:
Absolutely.

Aaron Van Wirdum:
Where you're trusting the DNS server.

Sjors Provoost:
And for Bitcoin, we're kind of abusing it, because Bitcoin nodes are not websites. But the idea is that there are a couple of Core developers who run DNS seeds, which are essentially DNS servers. And we're just pretending that, for example, seed.bitcoin.sprovoost.nl, which is what I'm running, is a website quote unquote and when you ask that website, quote unquote, what its IP address is, you get a whole list of IP addresses, but those IP addresses are Bitcoin nodes and every time you ask it, it's going to give you different IP addresses.

Aaron Van Wirdum:
Right? So what if someone corrupts you and-

Sjors Provoost:
Well, one step back. So this means that the standard infrastructure of the internet, all the internet service providers in the world and all these others are caching exactly where all the Bitcoin nodes are, because they think it's just a website. So it's kind of nice that you keep all these lists of nodes redundantly stored on the internet and there's quite a few protections on the internet, against censorship of DNS. So your leveraging all that. But at the same time, of course, if I and the other people were to lie and run a fake server, we could send you to any node we want, but that would be very visible.

Aaron Van Wirdum:
All right. And the reason it's visible is because anyone can request these IP addresses from you and then check if their actual lead Bitcoin nodes or not or if you're trying to cheat there. That's the reason they're visible. It would be hard to cheat.

Sjors Provoost:
If, you were to cheat like that, very non randomly, to the whole world, it'd be very obvious.

Aaron Van Wirdum:
Right? So, but what if it happens? Is there another way to connect with the Bitcoin network at that point?

Sjors Provoost:
Well, if they're lying, it's tricky, but if they're just offline. So, if all the Bitcoins DNS seeds are not reachable, then inside the Bitcoin Core source code and also in the thing you download is a list of IP addresses and as well as view hidden services.

Aaron Van Wirdum:
Right? So, that's also Bitcoin nodes they're embedded into the source code.

Sjors Provoost:
Yeah. So every year or so-

Aaron Van Wirdum:
Which, nodes are these? Or why are these embedded in the source code?

Sjors Provoost:
Okay. So what happens every six months or so is we ask all the DNS seed maintainers to provide a list of the most reliable node, just all the nodes sorted by how frequently they're online, because your DNS seed tends to track. I've pulled this node once and it was online. So basically what a DNS seed does on its side is it is just a crawler. So the DNS seed goes to a couple of Bitcoin nodes, ask it for all the nodes it knows, keeps a list and just goes to the list, pings them all and then once it's done pinging them all, it's just going to be them all again.

Sjors Provoost:
And it keeps track of how often they're online and so you make a list of that sorted by reliability. You take that from all the contributors and that goes into the source code. So that's the fallback. But it's only the first time you start your node, at least in theory. So only the very first time you start your node, you need this. After that, you'd keep track of the nodes you know about you store all these gossip nodes in a file and you start opening the file and you just try the nodes, you know about and only if you run out, if it doesn't work, you ask the seed it again.

Aaron Van Wirdum:
And then you keep syncing your list of IP addresses with the new nodes.

Sjors Provoost:
Yeah, exactly. I think whenever a node connects to you for the first time, that's one of the first things they ask. Who else do you know? I think you can even send them unsolicited. Which is why, if you start a new node, you get inbound connections pretty quickly because, you've announced your IP address to other people and they're gossiping it around and these other nodes then start connecting.

Aaron Van Wirdum:
Interesting. Okay. So, that makes it pretty clear to me. You bootstrap to the Bitcoin network by first querying, DNS records to find other Bitcoin nodes. You get a list of, IP addresses you use these to connect to the actual Bitcoin nodes, which could also be Tor nodes at that point, right?

Sjors Provoost:
Mm-hmm (affirmative) yep.

Aaron Van Wirdum:
These, you can also query from the DNS records. At that point, you ask about all of the nodes that they know and you update your list. And from that point on, you're also sharing your, the IP addresses you have with other nodes. So far, these were IP4 and IP6 and IP6 had a subset of onion nodes and with this upgrades will be ready for a newer version of onion nodes. That's a story.

Sjors Provoost:
That's about right.

Aaron Van Wirdum:
That's our podcast great.

Sjors Provoost:
And then one tiny little thing that was recently added, is that the Bitcoin node actually can spin up the version three onion node. But that is actually a five line change. So, that's quite nice. That'll just work, when you start a, I don't know, I think it's version 0.21. If you started up, if you were running a version 2 node before, it's going to run a version 3 tor node after if you weren't, then you need to read the documentation, how to set it up if you want to use it.

Aaron Van Wirdum:
Good.

Sjors Provoost:
So yeah, that's all.

Aaron Van Wirdum:
I guess that's it.

Sjors Provoost:
All right.

Aaron Van Wirdum:
Guys. I forgot to mention something.

Sjors Provoost:
Oh my God.

Aaron Van Wirdum:
I have amazing news.

Sjors Provoost:
Tell me.

Aaron Van Wirdum:
Actually Sjors, you already on the news.

Sjors Provoost:
I don't [Inaudible 00:17:11] what's the news?

Aaron Van Wirdum:
The Van Wirdum Sjorsnado has its own feed now. It's on RSS feed and it showed up in my podcast App. So I'm now subscribed to The Van Wirdum Sjorsnado. If you're listening and if you want to hear for all our episodes, then you can subscribe to The Van Wirdum Sjorsnado.

Ruben:
I'll be subscribing for sure. It's actually exactly what I was asking you guys for. What I was missing. I just wanted to, you be able to subscribe to your podcast specifically. So great [crosstalk 00:17:37].

Aaron Van Wirdum:
So that's two subscribers already Sjors, me and Ruben.

Sjors Provoost:
That's excellent.

Aaron Van Wirdum:
We're on the roll.

Sjors Provoost:
I was already subscribed. So another related-

Aaron Van Wirdum:
It's free.

Sjors Provoost:
Another related news is that we have had our first Swapcast.

Ruben:
Oh yeah, that's true.

Sjors Provoost:
Because we actually featured on-

Aaron Van Wirdum:
Unhashed. That's where-

Sjors Provoost:
The Unhashed Podcast.

Ruben:
That's right. Yeah. So sometimes we're getting technical issues or whatever and unable to record and then what we do is we look at other podcast or something where maybe I appear or one of the other guys and we broadcast that. So in this case, I came on to your show. So I ask you guys, maybe we can put that on The Unhashed Podcast. So, our Unhashed Podcast listeners, we're also able to listen to the last episode and probably if I don't know, a couple weeks from now, we run into issues again. Maybe I'll be asking you to air this episode. So, maybe they'll be number two.

Sjors Provoost:
Yeah, and if you need an extra motivation to check that out, we actually reedited the audio. So it's going to be a little bit better than the original.

Ruben:
That's correct.

Sjors Provoost:
So check it out.

Ruben:
Yeah.

Aaron Van Wirdum:
All right. I wanted to mention that.

Sjors Provoost:
Thank you for listening to The Van Wirdum Sjorsnado.

Aaron Van Wirdum:
There you go.

